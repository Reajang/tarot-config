version: '3.7'

services:
  postgres:
    image: leonidgarin/tarot-postgres:v1.0.0
#    build:
#      context: ../backend/infra/postgres
#      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: postgres
      TZ: Europe/Moscow
    healthcheck:
      interval: 10s
      retries: 10
      start_period: 45s
      test: pg_isready -U postgres && nc -z localhost 5432
      timeout: 10s
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data:rw

  backend:
    image: leonidgarin/tarot-backend:v1.0.0
#    build:
#      context: ../backend
#      dockerfile: docker/Dockerfile
    environment:
      spring.datasource.url: jdbc:postgresql://postgres:5432/tarot
      spring.flyway.url: jdbc:postgresql://postgres:5432/tarot
    ports:
      - "8080:8080"
      - "9090:9090"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  ui:
    image: leonidgarin/tarot-ui:v1.0.0
#    build:
#      context: ../ui
#      dockerfile: docker/Dockerfile
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    environment:
      BACKEND_UPSTREAM: host.docker.internal:8080
    ports:
      - "80:80"
    restart: unless-stopped

  zookeeper:
    image: 'bitnami/zookeeper:3.8.1-debian-11-r39'
    ports:
      - '2181'
    volumes:
      - zk-data:/bitnami/zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    restart: unless-stopped

  kafka:
    image: 'bitnami/kafka:3.4.0-debian-11-r35'
    ports:
      - "9093:9093"
    volumes:
      - kafka-data:/bitnami/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ENABLE_KRAFT: 'no'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_HEAP_OPTS: -Xmx256m -Xms256m
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_MAX_MESSAGE_BYTES: 3145728
      KAFKA_REPLICA_FETCH_MAX_BYTES: 3145728
    restart: unless-stopped

volumes:
  pgdata: { }
  kafka-data: { }
  zk-data: { }
